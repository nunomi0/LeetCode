class Solution {
public:
    bool recur(int idx, string&s, vector<string>& wordDict, vector<int> &dp){
        if (idx==s.length()) return true;
        if (dp[idx]!=-1) return dp[idx];
        for (int i = 0; i<wordDict.size(); i++){
            bool check=true;
            for (int j = 0; j<wordDict[i].size(); j++){
                if (idx+j>=s.size() || s[idx+j]!=wordDict[i][j]){
                    check=false;
                    break;
                }
            }
            if (check && recur(idx+wordDict[i].size(),s,wordDict,dp)) return dp[idx]=true;
        }
        return dp[idx]=false;
    }

    bool wordBreak(string s, vector<string>& wordDict) {
        vector<int> dp(s.size()+1,-1);
        return recur(0,s,wordDict,dp);
    }
};
