class Solution {
public:
    int rob(vector<int>& nums) {

        int dp1[110];
        int dp2[110];

        memset(dp1,0,sizeof(dp1));
        memset(dp2,0,sizeof(dp2));

        // dp1 : 0~n-2
        dp1[0]=nums[0];
        if (nums.size()>1) dp1[1]=max(nums[0],nums[1]);

        for (int i = 2; i<nums.size()-1; i++){
            dp1[i]=max(dp1[i-1],nums[i]+dp1[i-2]);
        }

        
        // dp2 : 1~n-1
        if (nums.size()>1) dp2[1]=nums[1];
        if (nums.size()>2) dp2[2]=max(nums[1],nums[2]);

        for (int i = 3; i<nums.size(); i++){
            dp2[i]=max(dp2[i-1], nums[i]+dp2[i-2]);
        }

        if (nums.size()==1) return dp1[0];
        return max(dp1[nums.size()-2],dp2[nums.size()-1]);
    }
};
